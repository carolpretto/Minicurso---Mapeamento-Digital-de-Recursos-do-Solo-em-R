#Instalar pacotes necessários
#install.packages("sp")
#install.packages("raster")
#install.packages("caret")

#Carregar 
library(sp)
library(raster)
library(caret)


## DADOS DE SOLO
# Importar dados de solo do arquivo 'dados_solo.csv'que estão na pasta 'mds-r'
dados <- read.csv("meus_dados.csv", sep = ",", na.strings = c("#N/A", "#N/D"))

#Substituir N/A
meus_dados <- na.omit(dados)

# Visualizar as primeiras linhas do conjunto de dados
head(variavel)
View(variavel)

# No objeto 'dados' a coluna 'coord_x' se refere a longitude e 'coord_y' a latitude
coordinates(variavel) <- ~coord_x + coord_y

# Definir o CRS usando EPSG
proj4string(variavel) <- CRS("+init=epsg:31982")

# Conferir se os dados estão espaciais:
str(variavel)

# Visualizar os dados
plot(dados)

## Análise dos dados de solo
# Resumo estatístico
summary(dados@data$profundidade)
#histograma de frequência
hist(dados@data$profundidade, main = "Histograma de Profundidade do Solo", xlab = "Profundidade (cm)")

## COVARIÁVEIS
# Importar as covariáveis
elevacao <- raster("covariaveis/ELEV.tif")
#declividade <- raster("covariaveis/SL.tif")
#topo_index <- raster("covariaveis/TWI.tif")
#dis_drenagem <- raster("covariaveis/CNBL.tif")

plot(elevacao, main ="Titulo do meu mapa")

#ou 

files <- list.files(path = "covariaveis", pattern = "tif$",
                    full.names = TRUE)

covariaveis <- stack(files)


# Extrair valores de cada covariável nos pontos
#dados$elevacao <- extract(x = elevacao, y = dados, sp = TRUE)
#dados$declividade <- extract(x = SL, y = dados, sp = TRUE)
#dados$topo_index <- extract(x = TWI, y = dados, sp = TRUE)
#dados$dis_drenagem <- extract(x = CNBL, y = dados, sp = TRUE)

#ou 

dados <- extract(x = covariaveis, y = dados, sp = TRUE)


#Veja a matriz de treinamento
head(dados@data)

##################################################################
### MAPA DE PROFUNDIDADE

#Formula
formula = as.formula(paste("profundidade ~", paste0(names(covariaveis), 
                                                    collapse = "+")))

# treinando o modelo
ctrl <- trainControl(method = "cv", savePred=T)
rfmodel <- train(formula, data=dados@data, method = "rf", trControl = ctrl,
                 importance=TRUE)

#visualizando o modelo
rfmodel

#predição espacial
mapa <- predict(covariaveis, rfmodel)
plot(mapa, main ="Mapa de profundidade (cm)")

# Savar o mapa com tif
writeRaster(mapa, filename = "resultados/titulo do meu mapa.tif",
            overwrite=TRUE)

#####################################################

espessura_a 
